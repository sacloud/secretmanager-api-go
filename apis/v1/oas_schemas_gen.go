// Code generated by ogen, DO NOT EDIT.

package v1

type BasicAuth struct {
	Username string
	Password string
	Roles    []string
}

// GetUsername returns the value of Username.
func (s *BasicAuth) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *BasicAuth) GetPassword() string {
	return s.Password
}

// GetRoles returns the value of Roles.
func (s *BasicAuth) GetRoles() []string {
	return s.Roles
}

// SetUsername sets the value of Username.
func (s *BasicAuth) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *BasicAuth) SetPassword(val string) {
	s.Password = val
}

// SetRoles sets the value of Roles.
func (s *BasicAuth) SetRoles(val []string) {
	s.Roles = val
}

// Ref: #/components/schemas/CreateSecret
type CreateSecret struct {
	Name          string `json:"Name"`
	Value         string `json:"Value"`
	LatestVersion int    `json:"LatestVersion"`
}

// GetName returns the value of Name.
func (s *CreateSecret) GetName() string {
	return s.Name
}

// GetValue returns the value of Value.
func (s *CreateSecret) GetValue() string {
	return s.Value
}

// GetLatestVersion returns the value of LatestVersion.
func (s *CreateSecret) GetLatestVersion() int {
	return s.LatestVersion
}

// SetName sets the value of Name.
func (s *CreateSecret) SetName(val string) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *CreateSecret) SetValue(val string) {
	s.Value = val
}

// SetLatestVersion sets the value of LatestVersion.
func (s *CreateSecret) SetLatestVersion(val int) {
	s.LatestVersion = val
}

// Ref: #/components/schemas/CreateVault
type CreateVault struct {
	ID          string    `json:"ID"`
	CreatedAt   DateTime  `json:"CreatedAt"`
	ModifiedAt  DateTime  `json:"ModifiedAt"`
	Name        string    `json:"Name"`
	Description OptString `json:"Description"`
	KmsKeyID    string    `json:"KmsKeyID"`
	Tags        []string  `json:"Tags"`
}

// GetID returns the value of ID.
func (s *CreateVault) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateVault) GetCreatedAt() DateTime {
	return s.CreatedAt
}

// GetModifiedAt returns the value of ModifiedAt.
func (s *CreateVault) GetModifiedAt() DateTime {
	return s.ModifiedAt
}

// GetName returns the value of Name.
func (s *CreateVault) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreateVault) GetDescription() OptString {
	return s.Description
}

// GetKmsKeyID returns the value of KmsKeyID.
func (s *CreateVault) GetKmsKeyID() string {
	return s.KmsKeyID
}

// GetTags returns the value of Tags.
func (s *CreateVault) GetTags() []string {
	return s.Tags
}

// SetID sets the value of ID.
func (s *CreateVault) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateVault) SetCreatedAt(val DateTime) {
	s.CreatedAt = val
}

// SetModifiedAt sets the value of ModifiedAt.
func (s *CreateVault) SetModifiedAt(val DateTime) {
	s.ModifiedAt = val
}

// SetName sets the value of Name.
func (s *CreateVault) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreateVault) SetDescription(val OptString) {
	s.Description = val
}

// SetKmsKeyID sets the value of KmsKeyID.
func (s *CreateVault) SetKmsKeyID(val string) {
	s.KmsKeyID = val
}

// SetTags sets the value of Tags.
func (s *CreateVault) SetTags(val []string) {
	s.Tags = val
}

type DateTime string

// Ref: #/components/schemas/DeleteSecret
type DeleteSecret struct {
	Name string `json:"Name"`
}

// GetName returns the value of Name.
func (s *DeleteSecret) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *DeleteSecret) SetName(val string) {
	s.Name = val
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilInt) SetToNull() {
	o.Set = true
	o.Null = true
	var v int
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PaginatedSecretList
type PaginatedSecretList struct {
	Count   int      `json:"Count"`
	From    OptInt   `json:"From"`
	Total   OptInt   `json:"Total"`
	Secrets []Secret `json:"Secrets"`
}

// GetCount returns the value of Count.
func (s *PaginatedSecretList) GetCount() int {
	return s.Count
}

// GetFrom returns the value of From.
func (s *PaginatedSecretList) GetFrom() OptInt {
	return s.From
}

// GetTotal returns the value of Total.
func (s *PaginatedSecretList) GetTotal() OptInt {
	return s.Total
}

// GetSecrets returns the value of Secrets.
func (s *PaginatedSecretList) GetSecrets() []Secret {
	return s.Secrets
}

// SetCount sets the value of Count.
func (s *PaginatedSecretList) SetCount(val int) {
	s.Count = val
}

// SetFrom sets the value of From.
func (s *PaginatedSecretList) SetFrom(val OptInt) {
	s.From = val
}

// SetTotal sets the value of Total.
func (s *PaginatedSecretList) SetTotal(val OptInt) {
	s.Total = val
}

// SetSecrets sets the value of Secrets.
func (s *PaginatedSecretList) SetSecrets(val []Secret) {
	s.Secrets = val
}

// Ref: #/components/schemas/PaginatedVaultList
type PaginatedVaultList struct {
	Count  int     `json:"Count"`
	From   OptInt  `json:"From"`
	Total  OptInt  `json:"Total"`
	Vaults []Vault `json:"Vaults"`
}

// GetCount returns the value of Count.
func (s *PaginatedVaultList) GetCount() int {
	return s.Count
}

// GetFrom returns the value of From.
func (s *PaginatedVaultList) GetFrom() OptInt {
	return s.From
}

// GetTotal returns the value of Total.
func (s *PaginatedVaultList) GetTotal() OptInt {
	return s.Total
}

// GetVaults returns the value of Vaults.
func (s *PaginatedVaultList) GetVaults() []Vault {
	return s.Vaults
}

// SetCount sets the value of Count.
func (s *PaginatedVaultList) SetCount(val int) {
	s.Count = val
}

// SetFrom sets the value of From.
func (s *PaginatedVaultList) SetFrom(val OptInt) {
	s.From = val
}

// SetTotal sets the value of Total.
func (s *PaginatedVaultList) SetTotal(val OptInt) {
	s.Total = val
}

// SetVaults sets the value of Vaults.
func (s *PaginatedVaultList) SetVaults(val []Vault) {
	s.Vaults = val
}

// Ref: #/components/schemas/Secret
type Secret struct {
	Name          string `json:"Name"`
	LatestVersion int    `json:"LatestVersion"`
}

// GetName returns the value of Name.
func (s *Secret) GetName() string {
	return s.Name
}

// GetLatestVersion returns the value of LatestVersion.
func (s *Secret) GetLatestVersion() int {
	return s.LatestVersion
}

// SetName sets the value of Name.
func (s *Secret) SetName(val string) {
	s.Name = val
}

// SetLatestVersion sets the value of LatestVersion.
func (s *Secret) SetLatestVersion(val int) {
	s.LatestVersion = val
}

// SecretmanagerVaultsDestroyNoContent is response for SecretmanagerVaultsDestroy operation.
type SecretmanagerVaultsDestroyNoContent struct{}

// SecretmanagerVaultsSecretsDestroyNoContent is response for SecretmanagerVaultsSecretsDestroy operation.
type SecretmanagerVaultsSecretsDestroyNoContent struct{}

// Ref: #/components/schemas/Unveil
type Unveil struct {
	Name    string    `json:"Name"`
	Version OptNilInt `json:"Version"`
	Value   string    `json:"Value"`
}

// GetName returns the value of Name.
func (s *Unveil) GetName() string {
	return s.Name
}

// GetVersion returns the value of Version.
func (s *Unveil) GetVersion() OptNilInt {
	return s.Version
}

// GetValue returns the value of Value.
func (s *Unveil) GetValue() string {
	return s.Value
}

// SetName sets the value of Name.
func (s *Unveil) SetName(val string) {
	s.Name = val
}

// SetVersion sets the value of Version.
func (s *Unveil) SetVersion(val OptNilInt) {
	s.Version = val
}

// SetValue sets the value of Value.
func (s *Unveil) SetValue(val string) {
	s.Value = val
}

// Ref: #/components/schemas/Vault
type Vault struct {
	ID          string    `json:"ID"`
	CreatedAt   DateTime  `json:"CreatedAt"`
	ModifiedAt  DateTime  `json:"ModifiedAt"`
	Name        string    `json:"Name"`
	Description OptString `json:"Description"`
	KmsKeyID    string    `json:"KmsKeyID"`
	Tags        []string  `json:"Tags"`
}

// GetID returns the value of ID.
func (s *Vault) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Vault) GetCreatedAt() DateTime {
	return s.CreatedAt
}

// GetModifiedAt returns the value of ModifiedAt.
func (s *Vault) GetModifiedAt() DateTime {
	return s.ModifiedAt
}

// GetName returns the value of Name.
func (s *Vault) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *Vault) GetDescription() OptString {
	return s.Description
}

// GetKmsKeyID returns the value of KmsKeyID.
func (s *Vault) GetKmsKeyID() string {
	return s.KmsKeyID
}

// GetTags returns the value of Tags.
func (s *Vault) GetTags() []string {
	return s.Tags
}

// SetID sets the value of ID.
func (s *Vault) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Vault) SetCreatedAt(val DateTime) {
	s.CreatedAt = val
}

// SetModifiedAt sets the value of ModifiedAt.
func (s *Vault) SetModifiedAt(val DateTime) {
	s.ModifiedAt = val
}

// SetName sets the value of Name.
func (s *Vault) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *Vault) SetDescription(val OptString) {
	s.Description = val
}

// SetKmsKeyID sets the value of KmsKeyID.
func (s *Vault) SetKmsKeyID(val string) {
	s.KmsKeyID = val
}

// SetTags sets the value of Tags.
func (s *Vault) SetTags(val []string) {
	s.Tags = val
}

// Ref: #/components/schemas/WrappedCreateSecret
type WrappedCreateSecret struct {
	Secret CreateSecret `json:"Secret"`
}

// GetSecret returns the value of Secret.
func (s *WrappedCreateSecret) GetSecret() CreateSecret {
	return s.Secret
}

// SetSecret sets the value of Secret.
func (s *WrappedCreateSecret) SetSecret(val CreateSecret) {
	s.Secret = val
}

// Ref: #/components/schemas/WrappedCreateVault
type WrappedCreateVault struct {
	Vault CreateVault `json:"Vault"`
}

// GetVault returns the value of Vault.
func (s *WrappedCreateVault) GetVault() CreateVault {
	return s.Vault
}

// SetVault sets the value of Vault.
func (s *WrappedCreateVault) SetVault(val CreateVault) {
	s.Vault = val
}

// Ref: #/components/schemas/WrappedDeleteSecret
type WrappedDeleteSecret struct {
	Secret DeleteSecret `json:"Secret"`
}

// GetSecret returns the value of Secret.
func (s *WrappedDeleteSecret) GetSecret() DeleteSecret {
	return s.Secret
}

// SetSecret sets the value of Secret.
func (s *WrappedDeleteSecret) SetSecret(val DeleteSecret) {
	s.Secret = val
}

// Ref: #/components/schemas/WrappedSecret
type WrappedSecret struct {
	Secret Secret `json:"Secret"`
}

// GetSecret returns the value of Secret.
func (s *WrappedSecret) GetSecret() Secret {
	return s.Secret
}

// SetSecret sets the value of Secret.
func (s *WrappedSecret) SetSecret(val Secret) {
	s.Secret = val
}

// Ref: #/components/schemas/WrappedUnveil
type WrappedUnveil struct {
	Secret Unveil `json:"Secret"`
}

// GetSecret returns the value of Secret.
func (s *WrappedUnveil) GetSecret() Unveil {
	return s.Secret
}

// SetSecret sets the value of Secret.
func (s *WrappedUnveil) SetSecret(val Unveil) {
	s.Secret = val
}

// Ref: #/components/schemas/WrappedVault
type WrappedVault struct {
	Vault Vault `json:"Vault"`
}

// GetVault returns the value of Vault.
func (s *WrappedVault) GetVault() Vault {
	return s.Vault
}

// SetVault sets the value of Vault.
func (s *WrappedVault) SetVault(val Vault) {
	s.Vault = val
}
