// Code generated by ogen, DO NOT EDIT.

package v1

// SetFake set fake values.
func (s *CreateSecret) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Value = "string"
		}
	}
	{
		{
			s.LatestVersion = int(0)
		}
	}
}

// SetFake set fake values.
func (s *CreateVault) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.CreatedAt.SetFake()
		}
	}
	{
		{
			s.ModifiedAt.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.KmsKeyID = "string"
		}
	}
	{
		{
			s.Tags = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Tags = append(s.Tags, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *DateTime) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = DateTime(unwrapped)
}

// SetFake set fake values.
func (s *DeleteSecret) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *OptInt) SetFake() {
	var elem int
	{
		elem = int(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptNilInt) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptString) SetFake() {
	var elem string
	{
		elem = "string"
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *PaginatedSecretList) SetFake() {
	{
		{
			s.Count = int(0)
		}
	}
	{
		{
			s.From.SetFake()
		}
	}
	{
		{
			s.Total.SetFake()
		}
	}
	{
		{
			s.Secrets = nil
			for i := 0; i < 0; i++ {
				var elem Secret
				{
					elem.SetFake()
				}
				s.Secrets = append(s.Secrets, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *PaginatedVaultList) SetFake() {
	{
		{
			s.Count = int(0)
		}
	}
	{
		{
			s.From.SetFake()
		}
	}
	{
		{
			s.Total.SetFake()
		}
	}
	{
		{
			s.Vaults = nil
			for i := 0; i < 0; i++ {
				var elem Vault
				{
					elem.SetFake()
				}
				s.Vaults = append(s.Vaults, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *Secret) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.LatestVersion = int(0)
		}
	}
}

// SetFake set fake values.
func (s *Unveil) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Version.SetFake()
		}
	}
	{
		{
			s.Value = "string"
		}
	}
}

// SetFake set fake values.
func (s *Vault) SetFake() {
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.CreatedAt.SetFake()
		}
	}
	{
		{
			s.ModifiedAt.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.KmsKeyID = "string"
		}
	}
	{
		{
			s.Tags = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Tags = append(s.Tags, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *WrappedCreateSecret) SetFake() {
	{
		{
			s.Secret.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *WrappedCreateVault) SetFake() {
	{
		{
			s.Vault.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *WrappedDeleteSecret) SetFake() {
	{
		{
			s.Secret.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *WrappedSecret) SetFake() {
	{
		{
			s.Secret.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *WrappedUnveil) SetFake() {
	{
		{
			s.Secret.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *WrappedVault) SetFake() {
	{
		{
			s.Vault.SetFake()
		}
	}
}
